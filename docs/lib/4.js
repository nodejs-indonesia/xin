(window.webpackJsonp=window.webpackJsonp||[]).push([[4,10],{1:function(t,i,e){"use strict";e.r(i);var n=e(4),s=e(0);e(28);class o extends n.a{get props(){const t=this.__repository.get("view.transitionIn")||this.__repository.get("view.transition")||"slide",i=this.__repository.get("view.transitionOut")||this.__repository.get("view.transition")||"fade";return Object.assign({},super.props,{uri:{type:String,required:!0},transitionIn:{type:String,value:t},transitionOut:{type:String,value:i},index:{type:Number,value:0}})}focusing(){}focused(){}blurred(){}created(){super.created(),this.classList.add("xin-view")}ready(){super.ready(),this.inFx=new s.a({element:this,transition:this.transitionIn,method:"in"}),this.outFx=new s.a({element:this,transition:this.transitionOut,method:"out"})}attached(){super.attached(),this.classList.remove("xin-view--focus"),this.classList.remove("xin-view--visible"),this.__app?(this.__app.route(this.uri,t=>{this.focus(t)}),this.fire("routed")):console.warn("Cannot route view to undefined app")}async focus(t={}){this.set("parameters",t),await this.focusing(t),this.fire("focusing",t),this.async(()=>{"setFocus"in this.parentElement?this.parentElement.setFocus(this):(this.setVisible(!0),this.setFocus(!0))})}setVisible(t){if(t)return this.classList.add("xin-view--visible"),void this.fire("show",{view:this});this.classList.remove("xin-view--visible"),[].forEach.call(this.querySelectorAll(".xin-view.xin-view--visible"),i=>i.setVisible(t)),this.fire("hide")}async setFocus(t){if(t)return this.classList.add("xin-view--focus"),await this.focused(),void this.fire("focus");this.classList.remove("xin-view--focus"),[].forEach.call(this.querySelectorAll(".xin-view.xin-view--focus"),i=>{"setFocus"in i.parentElement?i.parentElement.setFocus(null):i.setFocus(t)}),await this.blurred(),this.fire("blur")}}Object(n.d)("xin-view",o),e.d(i,"View",function(){return o})},13:function(t,i,e){"use strict";e.r(i);var n=e(5),s=e(1);Object(n.b)("x-binding",class extends s.View{get template(){return e(24)}get props(){return Object.assign({},super.props,{foo:{type:String,value:""}})}})},24:function(t,i){t.exports='<div class="padding">\n  <h2>Binding</h2>\n\n  <p>Data binding connects data from a web component to a property or attribute of an element.</p>\n\n  <p>Example,</p>\n\n  <code><pre>\n&lt;div&gt;Input&lt;/div&gt;\n&lt;input type="text" id="input" value="{{foo}}"&gt;\n\n&lt;div&gt;Readonly&lt;/div&gt;\n&lt;input type="text" id="inputRo" value="[[foo]]"&gt;\n\n&lt;div id="result"&gt;[[foo]]&lt;/div&gt;</pre></code>\n\n  <p>It will bind #input value to foo property of parent and update data to #result</p>\n\n  <div class="card">\n    <div>\n      <p>Input</p>\n      <input id="input" type="text" value="{{foo}}">\n    </div>\n\n    <div>\n      <p>Readonly Input</p>\n      <input id="inputRo" type="text" value="[[foo]]">\n    </div>\n\n    <div>\n      <p>Result</p>\n      <span id="result">[[foo]]</span>\n    </div>\n  </div>\n\n  <h3>Concept</h3>\n\n  <ul>\n    <li>Binding to properties</li>\n    <li>Get set methods</li>\n    <li>Push splice methods</li>\n    <li>Listeners</li>\n  </ul>\n</div>\n'},27:function(t,i,e){(t.exports=e(8)(!1)).push([t.i,".xin-view {\n  box-sizing: border-box;\n  display: none;\n}\n\n.xin-view.xin-view--visible {\n  display: block;\n}\n",""])},28:function(t,i,e){var n=e(27);"string"==typeof n&&(n=[[t.i,n,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};e(7)(n,s);n.locals&&(t.exports=n.locals)}}]);